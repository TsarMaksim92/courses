package eu.senla.task8.myArray;

public interface MyList<T> {
    void add (int index, T obj); //добавляет в список по индексу index объект obj
    boolean addAll(int index, MyList<? extends T> col); //добавляет в список по индексу index все
                                                        //элементы коллекции col. Если в результате добавления список был изменен, то
                                                        //возвращается true, иначе возвращается false
    T get(int index); //возвращает объект из списка по индексу index
    T set(int index, T obj); // присваивает значение объекта obj элементу, который находится по индексу index
    T remove(int index); //удаляет объект из списка по индексу index, возвращая при этом удаленный объект
    int indexOf(Object obj); //возвращает индекс первого вхождения объекта obj в список.
                            // Если объект не найден, то возвращается -1
    int lastIndexOf(Object obj); //возвращает индекс последнего вхождения объекта obj в список.
                                 //Если объект не найден, то возвращается -1
    MyList<T> subList(int start, int end); //получает набор элементов, которые находятся в списке между индексами start и end


    Object[] toArray();


    /* не сделано!!!
МЕТОДЫ

ListIterator<E> listIterator (): возвращает объект ListIterator для обхода элементов списка
static <E> List<E> of(элементы): создает из набора элементов объект List
void sort(Comparator<? super E> comp): сортирует список с помощью компаратора comp

КОНСТРУКТОРЫ
MyArrayList(MyList <? extends E> col): создает список, в который добавляются все
элементы коллекции col.

ДОПОЛНИТЕЛЬНО
Comparator и ListIterator используем дефолтные.(НЕ пишем свои)
В ходе выполнения задания может появится надобность в реализации методов из
Collection - это на ваше усмотрение, добавляем в ваш интерфейс и реализовываем.
Для сортировки возможно использовать любой способ(метода пузырьком будет
достаточно)
     */
}

